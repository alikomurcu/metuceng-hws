
examples.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <max_bst>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   c:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
  13:	00 
  14:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  19:	74 26                	je     41 <max_bst+0x41>
  1b:	eb 0c                	jmp    29 <max_bst+0x29>
  1d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  21:	48 8b 40 10          	mov    0x10(%rax),%rax
  25:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  29:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  2d:	48 8b 40 10          	mov    0x10(%rax),%rax
  31:	48 85 c0             	test   %rax,%rax
  34:	75 e7                	jne    1d <max_bst+0x1d>
  36:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  3a:	48 8b 00             	mov    (%rax),%rax
  3d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  41:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  45:	5d                   	pop    %rbp
  46:	c3                   	retq   

0000000000000047 <max_btree>:
  47:	f3 0f 1e fa          	endbr64 
  4b:	55                   	push   %rbp
  4c:	48 89 e5             	mov    %rsp,%rbp
  4f:	48 83 ec 20          	sub    $0x20,%rsp
  53:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  57:	48 b8 00 00 00 00 00 	movabs $0x8000000000000000,%rax
  5e:	00 00 80 
  61:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  65:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  6a:	74 57                	je     c3 <max_btree+0x7c>
  6c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  70:	48 8b 00             	mov    (%rax),%rax
  73:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  77:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  7b:	48 8b 40 08          	mov    0x8(%rax),%rax
  7f:	48 89 c7             	mov    %rax,%rdi
  82:	e8 00 00 00 00       	callq  87 <max_btree+0x40>
  87:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  8b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  8f:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
  93:	7e 08                	jle    9d <max_btree+0x56>
  95:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  99:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  9d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  a1:	48 8b 40 10          	mov    0x10(%rax),%rax
  a5:	48 89 c7             	mov    %rax,%rdi
  a8:	e8 00 00 00 00       	callq  ad <max_btree+0x66>
  ad:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  b5:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
  b9:	7e 08                	jle    c3 <max_btree+0x7c>
  bb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  bf:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  c3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  c7:	c9                   	leaveq 
  c8:	c3                   	retq   

00000000000000c9 <collect_into>:
  c9:	f3 0f 1e fa          	endbr64 
  cd:	55                   	push   %rbp
  ce:	48 89 e5             	mov    %rsp,%rbp
  d1:	48 83 ec 30          	sub    $0x30,%rsp
  d5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  d9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  dd:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  e1:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  e6:	74 07                	je     ef <collect_into+0x26>
  e8:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
  ed:	7f 0a                	jg     f9 <collect_into+0x30>
  ef:	b8 00 00 00 00       	mov    $0x0,%eax
  f4:	e9 95 00 00 00       	jmpq   18e <collect_into+0xc5>
  f9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  fd:	48 8b 40 08          	mov    0x8(%rax),%rax
 101:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
 105:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
 109:	48 89 ce             	mov    %rcx,%rsi
 10c:	48 89 c7             	mov    %rax,%rdi
 10f:	e8 00 00 00 00       	callq  114 <collect_into+0x4b>
 114:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 118:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 11c:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
 120:	75 06                	jne    128 <collect_into+0x5f>
 122:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 126:	eb 66                	jmp    18e <collect_into+0xc5>
 128:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 12c:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
 133:	00 
 134:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 138:	48 01 c2             	add    %rax,%rdx
 13b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 13f:	48 8b 00             	mov    (%rax),%rax
 142:	48 89 02             	mov    %rax,(%rdx)
 145:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 149:	48 2b 45 f0          	sub    -0x10(%rbp),%rax
 14d:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
 151:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 155:	48 83 c0 01          	add    $0x1,%rax
 159:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
 160:	00 
 161:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 165:	48 01 c1             	add    %rax,%rcx
 168:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 16c:	48 8b 40 10          	mov    0x10(%rax),%rax
 170:	48 89 ce             	mov    %rcx,%rsi
 173:	48 89 c7             	mov    %rax,%rdi
 176:	e8 00 00 00 00       	callq  17b <collect_into+0xb2>
 17b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 17f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 183:	48 8d 50 01          	lea    0x1(%rax),%rdx
 187:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 18b:	48 01 d0             	add    %rdx,%rax
 18e:	c9                   	leaveq 
 18f:	c3                   	retq   
